{"version":3,"sources":["components/CharacterSelectionMenu.js","components/ErrorMessage.js","assets/GameStatus.js","components/GameControl.js","assets/me-characters.png","assets/CharactersLocationsDB.js","App.js","index.js"],"names":["CharacterSelectionMenu","positionTop","positionLeft","handleCharacterSelection","position","top","left","handleOnClick","e","target","textContent","style","id","onClick","ErrorMessage","positionX","positionY","characterName","messagePosition","backgroundColor","GameStatus","Enumify","INACTIVE","ACTIVE","FINISHED","_","closeEnum","GameControl","status","startGame","stopGame","useState","time","setTime","eventSource","useRef","start","current","EventSource","onmessage","event","data","stop","close","initializeDatabase","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","collection","get","then","snapshot","docs","forEach","document","character","name","toLowerCase","liara","ellipse","x","y","radiusX","radiusY","rotation","startAngle","endAngle","garrus","talia","Path2D","getCharacterLocation","Error","App","canvas","cursorPosition","characterSelectionMenu","charactersFound","Set","errorMessage","gameStatus","setGameStatus","menuIsVisible","setMenuIsVisible","showErrorMessage","setShowErrorMessage","has","findCharacter","add","placeCheckmark","setTimeout","displayErrorMessage","size","characterLocation","getContext","isPointInPath","appDiv","getElementById","checkmark","createElement","appendChild","useEffect","context","img","Image","onload","width","naturalWidth","height","naturalHeight","drawImage","src","GAME_IMAGE","className","rect","getBoundingClientRect","clientX","right","clientY","bottom","cursorIsWithinCanvas","ref","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b885e142.chunk.js","sourcesContent":["import \"./CharacterSelectionMenu.css\";\n\nfunction CharacterSelectionMenu({\n  positionTop,\n  positionLeft,\n  handleCharacterSelection,\n}) {\n  const position = {\n    top: `${positionTop}px`,\n    left: `${positionLeft}px`,\n  };\n\n  function handleOnClick(e) {\n    handleCharacterSelection(e.target.textContent);\n  }\n\n  return (\n    <ul style={position} id=\"menu\">\n      <li onClick={handleOnClick}>Liara</li>\n      <li onClick={handleOnClick}>Talia</li>\n      <li onClick={handleOnClick}>Garrus</li>\n    </ul>\n  );\n}\n\nexport default CharacterSelectionMenu;\n","import React from \"react\";\n\nfunction ErrorMessage({ positionX, positionY, characterName }) {\n  const messagePosition = {\n    position: \"absolute\",\n    left: `${positionX}px`,\n    top: `${positionY}px`,\n    backgroundColor: \"red\",\n  };\n\n  return <div style={messagePosition}>That's not {characterName}</div>;\n}\n\nexport default ErrorMessage;\n","import { Enumify } from \"enumify\";\n\nclass GameStatus extends Enumify {\n  static INACTIVE = new GameStatus();\n  static ACTIVE = new GameStatus();\n  static FINISHED = new GameStatus();\n  static _ = this.closeEnum();\n}\n\nexport default GameStatus;\n","import React, { useRef, useState } from \"react\";\nimport GameStatus from \"../assets/GameStatus\";\n\nfunction GameControl({ status, startGame, stopGame }) {\n  const URL_TIMER = \"https://odin-photo-tagger.herokuapp.com/timer\";\n  const [time, setTime] = useState();\n  const eventSource = useRef(null);\n\n  function start() {\n    startGame();\n    eventSource.current = new EventSource(URL_TIMER);\n    eventSource.current.onmessage = function (event) {\n      setTime(event.data);\n    };\n  }\n\n  function stop() {\n    stopGame();\n    eventSource.current.close();\n  }\n\n  function finish() {\n    return \"TODO:\";\n  }\n\n  function getControls() {\n    if (status === GameStatus.INACTIVE) {\n      return (\n        <div>\n          <button onClick={start}>Start</button>\n          <p>00:00:00</p>\n        </div>\n      );\n    } else if (status === GameStatus.ACTIVE) {\n      return (\n        <div>\n          <button onClick={stop}>Stop</button>\n          <p>{time}</p>\n        </div>\n      );\n    } else if (status === GameStatus.FINISHED) {\n      return (\n        <div>\n          <button onClick={start}>Replay</button>\n          <div>You finished the game in {finish()}</div>\n        </div>\n      );\n    }\n  }\n\n  return <div>{getControls()}</div>;\n}\n\nexport default GameControl;\n","export default __webpack_public_path__ + \"static/media/me-characters.ebedfbb0.png\";","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nfunction initializeDatabase() {\n  if (!firebase.apps.length) {\n    // Your web app's Firebase configuration\n    const firebaseConfig = {\n      apiKey: \"AIzaSyDo5vRqSe9ScSIg_zGjpGmSeiifdqdZ_-g\",\n      authDomain: \"learning-firestore-8aed7.firebaseapp.com\",\n      projectId: \"learning-firestore-8aed7\",\n      storageBucket: \"learning-firestore-8aed7.appspot.com\",\n      messagingSenderId: \"395722441817\",\n      appId: \"1:395722441817:web:f8bc744bbd5cb942e39d48\",\n    };\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  getCharacters();\n}\n\nconst liara = new Path2D();\nconst talia = new Path2D();\nconst garrus = new Path2D();\n\nfunction getCharacters() {\n  const database = firebase.firestore();\n  database\n    .collection(\"characters\")\n    .get()\n    .then((snapshot) => {\n      snapshot.docs.forEach((document) => {\n        const character = document.data();\n        if (character.name.toLowerCase() === \"liara\") {\n          liara.ellipse(\n            character.x,\n            character.y,\n            character.radiusX,\n            character.radiusY,\n            character.rotation,\n            character.startAngle,\n            character.endAngle\n          );\n        } else if (character.name.toLowerCase() === \"garrus\") {\n          garrus.ellipse(\n            character.x,\n            character.y,\n            character.radiusX,\n            character.radiusY,\n            character.rotation,\n            character.startAngle,\n            character.endAngle\n          );\n        } else if (character.name.toLowerCase() === \"talia\") {\n          talia.ellipse(\n            character.x,\n            character.y,\n            character.radiusX,\n            character.radiusY,\n            character.rotation,\n            character.startAngle,\n            character.endAngle\n          );\n        }\n      });\n    });\n}\n\nfunction getCharacterLocation(name) {\n  if (name.toLowerCase() === \"liara\") {\n    return liara;\n  } else if (name.toLowerCase() === \"garrus\") {\n    return garrus;\n  } else if (name.toLowerCase() === \"talia\") {\n    return talia;\n  } else {\n    throw new Error();\n  }\n}\n\nexport { getCharacterLocation, initializeDatabase };\n","import React, { useEffect, useRef, useState } from \"react\";\nimport CharacterSelectionMenu from \"./components/CharacterSelectionMenu\";\nimport ErrorMessage from \"./components/ErrorMessage\";\nimport GameControl from \"./components/GameControl\";\nimport GameStatus from \"./assets/GameStatus\";\nimport GAME_IMAGE from \"./assets/me-characters.png\";\nimport {\n  getCharacterLocation,\n  initializeDatabase,\n} from \"./assets/CharactersLocationsDB\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const NUM_OF_CHARACTERS = 3;\n  const canvas = useRef(null);\n  const cursorPosition = useRef({ x: 0, y: 0 });\n  const characterSelectionMenu = useRef(null);\n  const charactersFound = useRef(new Set());\n  const errorMessage = useRef(null);\n  const [gameStatus, setGameStatus] = useState(GameStatus.INACTIVE);\n  const [menuIsVisible, setMenuIsVisible] = useState(false);\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n  useEffect(() => {\n    //  Display the game image\n    const context = canvas.current.getContext(\"2d\");\n    const img = new Image();\n    img.onload = function () {\n      canvas.current.width = img.naturalWidth;\n      canvas.current.height = img.naturalHeight;\n      context.drawImage(img, 0, 0);\n    };\n    img.src = GAME_IMAGE;\n\n    initializeDatabase();\n  }, []);\n\n  function toggleCharacterMenu(e) {\n    if (!cursorIsWithinCanvas(e)) {\n      if (menuIsVisible) {\n        setMenuIsVisible(false);\n      }\n      return;\n    }\n    menuIsVisible ? setMenuIsVisible(false) : setMenuIsVisible(true);\n\n    // position the menu\n    const rect = canvas.current.getBoundingClientRect();\n    cursorPosition.current.x = e.clientX - rect.left;\n    cursorPosition.current.y = e.clientY - rect.top;\n    characterSelectionMenu.current = (\n      <CharacterSelectionMenu\n        positionLeft={cursorPosition.current.x}\n        positionTop={cursorPosition.current.y}\n        handleCharacterSelection={handleCharacterSelection}\n      />\n    );\n  }\n\n  function cursorIsWithinCanvas(e) {\n    const rect = canvas.current.getBoundingClientRect();\n    return (\n      e.clientX <= rect.right &&\n      e.clientX >= rect.left &&\n      e.clientY >= rect.top &&\n      e.clientY <= rect.bottom\n    );\n  }\n\n  function handleCharacterSelection(characterName) {\n    const name = characterName.toLowerCase();\n    if (charactersFound.current.has(name)) {\n      return;\n    }\n\n    // find characters\n    if (name === \"liara\" && findCharacter(getCharacterLocation(\"liara\"))) {\n      charactersFound.current.add(\"liara\");\n      placeCheckmark();\n    } else if (\n      name === \"garrus\" &&\n      findCharacter(getCharacterLocation(\"garrus\"))\n    ) {\n      charactersFound.current.add(\"garrus\");\n      placeCheckmark();\n    } else if (\n      name === \"talia\" &&\n      findCharacter(getCharacterLocation(\"talia\"))\n    ) {\n      charactersFound.current.add(\"talia\");\n      placeCheckmark();\n    } else {\n      displayErrorMessage(characterName);\n    }\n\n    if (charactersFound.current.size === NUM_OF_CHARACTERS) {\n      setGameStatus(GameStatus.FINISHED);\n    }\n  }\n\n  function findCharacter(characterLocation) {\n    const context = canvas.current.getContext(\"2d\");\n    return context.isPointInPath(\n      characterLocation,\n      cursorPosition.current.x,\n      cursorPosition.current.y\n    );\n  }\n\n  function displayErrorMessage(characterName) {\n    errorMessage.current = (\n      <ErrorMessage\n        positionX={cursorPosition.current.x}\n        positionY={cursorPosition.current.y}\n        characterName={characterName}\n      />\n    );\n    setShowErrorMessage(true);\n    setTimeout(() => {\n      setShowErrorMessage(false);\n    }, 2000);\n  }\n\n  function placeCheckmark() {\n    const appDiv = document.getElementById(\"App\");\n    const checkmark = document.createElement(\"div\");\n    checkmark.style.position = \"absolute\";\n    checkmark.style.left = `${cursorPosition.current.x}px`;\n    checkmark.style.top = `${cursorPosition.current.y}px`;\n    checkmark.textContent = \"✅\";\n    appDiv.appendChild(checkmark);\n  }\n\n  return (\n    <div id=\"App\" className=\"App\" onClick={toggleCharacterMenu}>\n      <GameControl\n        status={gameStatus}\n        startGame={() => {\n          setGameStatus(GameStatus.ACTIVE);\n        }}\n        stopGame={() => {\n          setGameStatus(GameStatus.INACTIVE);\n        }}\n      />\n      {menuIsVisible && characterSelectionMenu.current}\n      {showErrorMessage && errorMessage.current}\n      <canvas ref={canvas} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}